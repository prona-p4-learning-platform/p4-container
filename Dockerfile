FROM p4lang/p4app
# p4lang/p4app contains nearly everything we need for typical P4 assignments used in our masters' courses (e.g., p4c, bmv2, pi, mininet, ...)

LABEL de.hs-fulda.netlab.name="prona/p4-container" \
      de.hs-fulda.netlab.description="P4 and SDN learning environment example host instance to run assignments" \
      de.hs-fulda.netlab.url="https://github.com/prona-p4-learning-platform/p4-container" \
      de.hs-fulda.netlab.vcs-url="https://github.com/prona-p4-learning-platform/p4-container" \
      de.hs-fulda.netlab.docker.cmd="docker run -it --privileged -p 3005:3005 -p 3022:22 prona/p4-container -s"

# default lsp lb port
EXPOSE 3005/tcp
# default ssh port
EXPOSE 3022/tcp

# add a user p4 with password p4 as used by common p4 tutorials
RUN useradd -m -d /home/p4 -s /bin/bash p4
RUN echo "p4:p4" | chpasswd
RUN echo "p4 ALL=(ALL) NOPASSWD:ALL" > /etc/sudoers.d/99_p4
RUN chmod 440 /etc/sudoers.d/99_p4
USER p4
WORKDIR /home/p4

# install depenencies
RUN sudo apt-get update -y
RUN sudo apt-get install -y curl git openssh-server

# install packages needed for common assignments
RUN sudo apt-get install -y --no-install-recommends --fix-missing \
  tmux \
  iperf \
  iperf3 \
  net-tools \ 
  mtr \ 
  htop \
  tcpdump \
  tshark \
  wget \
  unzip \
  vim \
  joe \
  nano

# install node, needed to run language server proxy
RUN curl -sL https://deb.nodesource.com/setup_15.x | sudo -E bash -
RUN sudo apt-get install -y nodejs

# fetch typical tutorials and our p4-boilerplate and p4environment, so they can be used directly in the container for our courses
RUN git clone https://github.com/jafingerhut/p4-guide

RUN git clone https://github.com/p4lang/tutorials
# psutil required to run exercises in tutorials
RUN sudo pip install psutil

RUN git clone https://github.com/nsg-ethz/p4-learning
RUN git clone https://github.com/nsg-ethz/p4-utils
RUN cd p4-utils && sudo ./install.sh
# learning controller examples require bridge-utils
RUN sudo apt-get install -y --no-install-recommends --fix-missing \
  bridge-utils

# currently support for p4environment is disabled, due to missing netem support in the base container image
# also: p4environment kills eth0@ifXYZ interface providing ip address of container during stop
#
RUN git clone https://gitlab.cs.hs-fulda.de/flow-routing/cnsm2020/p4environment
## CAUTION: p4environment can currently not be used with wsl2 under windows due to missing sch_netem module/support
## fixing env to be able to use p4environment
RUN sudo apt purge -y python-scapy
## python modules would also be installed by p4environment on first use, psutil already installed for p4 tutorials
RUN sudo pip install networkx "scapy>=2.4.3" psutil numpy matplotlib scikit-learn pyyaml
## p4environment depends on ovs
RUN sudo apt-get install -y --no-install-recommends --fix-missing \
  openvswitch-switch

RUN git clone https://github.com/prona-p4-learning-platform/p4-boilerplate
# make examples using p4 tutorials relative utils import work in boilerplate
RUN ln -s tutorials/utils utils

# fetch language server proxy
RUN git clone https://github.com/wylieconlon/jsonrpc-ws-proxy
RUN cd jsonrpc-ws-proxy && npm install && npm run prepare

# fetch our p4 langugage server/vscode extension
RUN git clone https://github.com/prona-p4-learning-platform/p4-vscode-extension.git
RUN cd p4-vscode-extension && npm install && cd server && npm run build && cp -a src/antlr_autogenerated build/

# fetch python language server
RUN pip install python-language-server

# configure language server proxy
COPY servers.yml jsonrpc-ws-proxy/servers.yml

# copy start script example
COPY start-p4-container.sh /home/p4/start-p4-container.sh
# ensure unix line breaks
RUN sudo chmod +x /home/p4/start-p4-container.sh

ENTRYPOINT ["/home/p4/start-p4-container.sh"]
